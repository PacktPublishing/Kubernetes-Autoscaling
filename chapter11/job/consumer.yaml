apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-host
data:
  RabbitMqHost: YW1xcDovL3VzZXI6YXV0b3NjYWxpbmdAcmFiYml0bXEuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbDo1Njcy
---
apiVersion: keda.sh/v1alpha1
kind: ScaledJob
metadata:
  name: queue-job-consumer
  namespace: default
spec:
  jobTargetRef:
    template:
      metadata:
        labels:
          app: queue-job-consumer
      spec:        
        nodeSelector:
          intent: scaling-tests
        tolerations:
        - key: scaling-tests
          operator: Exists
        containers:
        - name: consumer
          image: christianhxc/rabbitmq-consumer:latest
          imagePullPolicy: Always
          env:
          - name: RABBITMQ_URL
            value: "amqp://user:autoscaling@rabbitmq.default.svc.cluster.local:5672"
          - name: QUEUE_NAME
            value: "autoscaling"
          - name: BATCH_SIZE
            value: "1"
          resources:
            requests:
              cpu: 350m
              memory: 128Mi
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app: queue-job-consumer
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
  pollingInterval: 5   # Check every 5 seconds
  maxReplicaCount: 30  # Maximum number of replicas
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 2
  triggers:
  - type: rabbitmq
    metadata:
      queueName: autoscaling
      mode: QueueLength
      value: "5"
    authenticationRef:
      name: rabbitmq-auth
---
apiVersion: keda.sh/v1alpha1
kind: TriggerAuthentication
metadata:
  name: rabbitmq-auth
spec:
  secretTargetRef:
    - parameter: host
      name: rabbitmq-host
      key: RabbitMqHost
---