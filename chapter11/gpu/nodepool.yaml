apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: gpu
spec:
  template:
    metadata:
      labels:
        nvidia.com/gpu.present: "true"
    spec:
      requirements:
      - key: karpenter.sh/capacity-type
        operator: In
        values: ["spot", "on-demand"]
      - key: karpenter.k8s.aws/instance-category
        operator: In
        values: ["g", "p"]
      - key: karpenter.k8s.aws/instance-gpu-manufacturer
        operator: In
        values: ["nvidia"]
      - key: kubernetes.io/arch
        operator: In
        values: ["amd64"]
      taints:
      - key: nvidia.com/gpu
        value: "true"
        effect: NoSchedule
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: gpu
  disruption:
    consolidationPolicy: WhenEmpty
    consolidateAfter: 5m
---
apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: gpu
spec:
  amiFamily: Bottlerocket
  amiSelectorTerms:
    - alias: bottlerocket@v1.42.0
  blockDeviceMappings:
    # Root volume (OS) - 4Gi for Bottlerocket GPU AMIs
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 4Gi
        volumeType: gp3
        deleteOnTermination: true
    # Data volume with your cached container images
    - deviceName: /dev/xvdb
      ebs:
        volumeSize: 100Gi  # Match your snapshot size
        volumeType: gp3
        deleteOnTermination: true
        snapshotID: snap-0123456789abcdef0  # Replace with your actual snapshot ID
        throughput: 1000
        iops: 4000
  role: "kubernetes-autoscaling"
  subnetSelectorTerms:
  - tags:
      karpenter.sh/discovery: "kubernetes-autoscaling"
  securityGroupSelectorTerms:
  - tags:
      karpenter.sh/discovery: "kubernetes-autoscaling"